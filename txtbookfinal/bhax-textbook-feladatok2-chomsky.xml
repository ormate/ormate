<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Encoding</title>
        <para>
		Fordítsuk le és futtassuk a Javat tanítok könyv MandelbrotHalmazNagyító.java forrását úgy, hogy a
fájl nevekben és a forrásokban is meghagyjuk az ékezetes betűket!
https://www.tankonyvtar.hu/hu/tartalom/tkt/javat-tanitok-javat/adatok.html

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
        <para>  A  Mandelbort Halmaz nagyító programját kellett fordítani és futtatni
                úgy, hogy mind a kódban és a fájlnévben meghagyjuk az ékezetes karaktereket,
                ha azonban ezt módosítások nélkül próbáljuk meg, akkor hibaüzenetetet fogunk kapni,
                mivel az UTF8-as kódolás számára ismeretlen karaktereket tartalmaz a kód.
                Ezt a problémát a -encoding kapcsoló használatával tudjuk kiküszöbölni, mellyel a 
                kódolást ISO/IEC 8859-2 (Latin-2)-re állítva a java.lang api-ban a következő eredményt kapjuk:
        </para>

    </section>        

     <section>
        <title>OOCWC lexer</title>
        <para>
		Izzítsuk be az OOCWC-t és vázoljuk a https://github.com/nbatfai/robocaremulator/blob/master/justine/rcemu/src/carlexer.ll lexert és kapcsolását a programunk OO
struktúrájába!

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 
    <section>
        <title>l334d1c45</title>
        <para>
		Írj olyan OO Java vagy C++ osztályt, amely leet cipherként működik, azaz megvalósítja ezt a betű
helyettesítést: https://simple.wikipedia.org/wiki/Leet (Ha ez első részben nem tetted meg, akkor írasd
ki és magyarázd meg a használt struktúratömb memóriafoglalását!)
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
        
        <para>A leet osztályban található egy input string, ami tartalmazza a bekért szöveget,
            illetve egy output string vektort, ami a konvertált szöveget.
            A konvertálás a cipher függvényben zajlik. A bekért stringet nagybetűvé konvertáljuk,
            hogy ne kelljen különbséget tenni a kisbetűk és nagybetűk között.
            Ezután végimegyünk az input string minden karakterén és a karakternek mefelelő leet
            karaktert helyezünk az output vektorba.
            A main()-ben deklaráljuk a bekérés megszakításához szükséges stringet és boolt, ami minden fordtás
            után ellenőrzi, hogy szeretnék e még fordítani. A konvertálás, pedig a konstruktorral történik.
            meghívásával hajtódik végre.
        </para>

        <programlisting language = "Java">
          <![CDATA[ 
          
          import java.util.Scanner;
public class Leet {
    private static StringBuilder transform(String input, StringBuilder sb)
    {
        input=input.toUpperCase();
        for(int i=0;i<input.length();i++)
        {
            switch (input.charAt(i)) {
                case 'A' : sb.append("4");
                    break;
                case 'B' : sb.append("|3");
                    break;
                case 'C' : sb.append("(");
                    break;
                case 'D' : sb.append("|)");
                    break;
                case 'E' : sb.append("3");
                    break;
                case 'F' : sb.append("|=");
                    break;
                case 'G' : sb.append("6");
                    break;
                case 'H' : sb.append("|-|");
                    break;
                case 'I' : sb.append("|");
                    break;
                case 'J' : sb.append(".]");
                    break;
                case 'K' : sb.append("|<");
                    break;
                case 'L' : sb.append("1");
                    break;
                case 'M' : sb.append("|Y|");
                    break;
                case 'N' : sb.append("/V");
                    break;
                case 'O' : sb.append("Ø");
                    break;
                case 'P' : sb.append("|O");
                    break;
                case 'Q' : sb.append("(,)");
                    break;
                case 'R' : sb.append("®");
                    break;
                case 'S' : sb.append("§");
                    break;
                case 'T' : sb.append("7");
                    break;
                case 'U' : sb.append("|_|");
                    break;
                case 'V' : sb.append("V");
                    break;
                case 'W' : sb.append("\\^/");
                    break;
                case 'X' : sb.append(" }{");
                    break;
                case 'Y' : sb.append("¥");
                    break;
                case 'Z' : sb.append("2");
                    break;
                case ' ' : sb.append(" ");
                    break;
                    default: sb.append(input.charAt(i));
            }
        }
        return sb;
    }
    public static void main(String[] args) {
        StringBuilder sb = new StringBuilder();
        Scanner scan = new Scanner(System.in);
        String input;
        System.out.println("Please enter the text that you want to l33tify");
        input=scan.nextLine();
        System.out.println("The 1337 version of your input is: \n");
        sb=transform(input,sb);
        System.out.print(sb);
        System.out.println("\n");
        }
    }
          
          
          
          ]]>
        </programlisting>
    </section> 
    <section>
        <title>Full screen</title>
        <para>
		Készítsünk egy teljes képernyős Java programot!
Tipp: https://www.tankonyvtar.hu/en/tartalom/tkt/javat-tanitok-javat/ch03.html#labirintus_jatek
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
        <para>
           A felhasznált labirintus program forrása: https://www.tankonyvtar.hu/hu/tartalom/tkt/javat-tanitok-javat/javat-tanitok-javat.zip
          Használt displayek lekérdezése a getLocalGraphicsEnviroment() és a getDefaulScreenDevice() metódusokkal. </para>
        <programlisting>public class LabirintusJáték extends java.awt.Frame
        implements Runnable {
.
.
.
java.awt.GraphicsDevice graphicsDevice;
.
.
java.awt.GraphicsEnvironment graphicsEnvironment = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();
.
.
graphicsDevice = graphicsEnvironment.getDefaultScreenDevice();
.
.
teljesKépernyősMód(graphicsDevice);
        </programlisting>
        <para> A teljesKépernyősMód-hoz tartozó kód:</para>
       <programlisting>    public void teljesKépernyősMód(java.awt.GraphicsDevice graphicsDevice) {
        
        int szélesség = 0;
        int magasság = 0;
        setUndecorated(true);
        setIgnoreRepaint(true);
        setResizable(false);
        boolean fullScreenTamogatott = graphicsDevice.isFullScreenSupported();
        if(fullScreenTamogatott) {
            graphicsDevice.setFullScreenWindow(this);
            java.awt.DisplayMode displayMode
                    = graphicsDevice.getDisplayMode();
            szélesség = displayMode.getWidth();
            magasság = displayMode.getHeight();
            int színMélység = displayMode.getBitDepth();
            int frissítésiFrekvencia = displayMode.getRefreshRate();
            System.out.println(szélesség
                    + "x"  + magasság
                    + ", " + színMélység
                    + ", " + frissítésiFrekvencia);
            java.awt.DisplayMode[] displayModes
                    = graphicsDevice.getDisplayModes();
            boolean dm1024x768 = false;
            for(int i=0; i&lt;displayModes.length; ++i) {
                if(displayModes[i].getWidth() == 1920
                        &amp;&amp; displayModes[i].getHeight() == 1080
                        &amp;&amp; displayModes[i].getBitDepth() == színMélység
                        &amp;&amp; displayModes[i].getRefreshRate() 
                        == frissítésiFrekvencia) {
                    graphicsDevice.setDisplayMode(displayModes[i]);
                    dm1024x768 = true;
                    break;
                }
                
            }
            
            if(!dm1024x768)
                System.out.println("Nem megy az 1024x768.");
        </programlisting>
    <para>
        Ez a kód felelős a fullscreen mód beállításáért. Az ablak kereteit egyszerűen kivesszük, és kikapcsoljuk az átméretezhetőséget.
        Ezután lekérdezzük, hogy a fullscreen mód támogatott-e, ha igen, átadjuk a képernyű tulajdonságait a setFullScreenWindow() metódusnak.
        A támogatott felbontásokat egy tömbbe helyezzük, majd összevetve a jelenlegi felbontással, kiderül hogy támogatott e (amennyiben nem, hibaüzenetet kapunk)
    </para>
    </section>     
	<section>
        <title>Paszigráfia Rapszódia OpenGL full screen vizualizáció</title>
        <para>
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 	
	<section>
        <title>Paszigráfia Rapszódia OpenGL full screen vizualizáció</title>
        <para>
		Lásd vis_prel_para.pdf! Apró módosításokat eszközölj benne, pl. színvilág, textúrázás, a szintek jobb
elkülönítése, kézreállóbb irányítás.
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 
	<section>
        <title>Paszigráfia Rapszódia LuaLaTeX vizualizáció</title>
        <para>
Lásd vis_prel_para.pdf! Apró módosításokat eszközölj benne, pl. színvilág, még erősebb 3D-s hatás.
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 
	<section>
        <title>Perceptron osztály</title>
        <para>
Dolgozzuk be egy külön projektbe a projekt Perceptron osztályát!
Lásd https://youtu.be/XpBnR31BRJY
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 	
        

</chapter>                
